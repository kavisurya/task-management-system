{"ast":null,"code":"var _jsxFileName = \"/home/baby/Desktop/project/movies/frontend/src/adminroutes/createtask.js\";\nimport { Component } from \"react\";\nimport SlideBarsmall from \"../components/slidebarsmall\";\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport axios from \"axios\";\nimport SlideBar from \"../components/slidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Slidebar = () => {\n      this.setState({\n        toggleslide: !this.state.toggleslide\n      });\n    };\n\n    this.SendData = () => {\n      let config = {\n        headers: {\n          tokenkey: localStorage.getItem(\"token\")\n        }\n      };\n      axios.post(`${this.props.ip}/admin/createtask`, {\n        \"taskname\": this.state.copyresp_taskName,\n        \"fromTask\": this.state.copyresp_fromdate,\n        \"toTask\": this.state.copyresp_todate,\n        \"email\": this.state.copyresp_email\n      }, config).then(res => {\n        this.GetAlldata();\n        console.log(res.data);\n\n        if (res.data.error) {\n          ToastsStore.error(res.data.error);\n        } else {\n          ToastsStore.success(res.data.success);\n        }\n      });\n    };\n\n    this.state = {\n      toggleslide: true,\n      copyresp_taskName: \"\",\n      copyresp_fromdate: \"\",\n      copyresp_todate: \"\",\n      copyresp_email: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-justify\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary slidebutt\",\n          type: \"button\",\n          onClick: this.Slidebar,\n          value: \"slidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.state.toggleslide ? /*#__PURE__*/_jsxDEV(SlideBar, {\n          color2: \"#FF9900\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(SlideBarsmall, {\n          color2: \"#FF9900\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 79\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Create Task !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                margin: \"10% 10%\",\n                backgroundColor: \"#fff\",\n                padding: \"20px\",\n                borderRadius: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Task Name : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.copyresp_taskName,\n                onChange: event => {\n                  this.setState({\n                    copyresp_taskName: event.target.value\n                  });\n                },\n                placeholder: \"Task Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 152\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"From Date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"From Date\",\n                value: this.state.copyresp_fromdate,\n                onChange: event => {\n                  this.setState({\n                    copyresp_fromdate: event.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"End Date : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"To Date\",\n                value: this.state.copyresp_todate,\n                onChange: event => {\n                  this.setState({\n                    copyresp_todate: event.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"User Email \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Email\",\n                value: this.state.copyresp_email,\n                onChange: event => {\n                  this.setState({\n                    copyresp_email: event.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Create Task\",\n                className: \"bg-dark form-control btn text-white\",\n                onClick: this.SendData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/baby/Desktop/project/movies/frontend/src/adminroutes/createtask.js"],"names":["Component","SlideBarsmall","ToastsContainer","ToastsStore","axios","SlideBar","CreateTask","constructor","props","Slidebar","setState","toggleslide","state","SendData","config","headers","tokenkey","localStorage","getItem","post","ip","copyresp_taskName","copyresp_fromdate","copyresp_todate","copyresp_email","then","res","GetAlldata","console","log","data","error","success","render","margin","backgroundColor","padding","borderRadius","event","target","value"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport SlideBarsmall from \"../components/slidebarsmall\";\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport axios from \"axios\"\nimport SlideBar from \"../components/slidebar\";\n\nclass CreateTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toggleslide: true,\n            copyresp_taskName : \"\",\n            copyresp_fromdate : \"\",\n            copyresp_todate : \"\",\n            copyresp_email : \"\",\n        }\n    }\n\n    Slidebar = () => {\n        this.setState({ toggleslide: !this.state.toggleslide })\n    }\n\n    SendData =()=>\n    {\n        let config = {\n            headers: {\n                tokenkey: localStorage.getItem(\"token\")\n            }\n        }\n        axios.post(`${this.props.ip}/admin/createtask`, (\n            {\n                \"taskname\" : this.state.copyresp_taskName,\n                \"fromTask\" : this.state.copyresp_fromdate, \n                \"toTask\": this.state.copyresp_todate, \n                \"email\": this.state.copyresp_email, \n            }\n        ),config).then((res) => {\n            this.GetAlldata()\n            console.log(res.data)\n            if (res.data.error) {\n                ToastsStore.error(res.data.error)\n            }\n            else{\n                \n                ToastsStore.success(res.data.success)\n\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container-justify\">\n                <div>\n                    <input className=\"btn btn-primary slidebutt\" type=\"button\" onClick={this.Slidebar} value=\"slidebar\"></input>\n                </div>\n                <div className=\"row\">\n                    {this.state.toggleslide ? <SlideBar color2=\"#FF9900\" /> : <SlideBarsmall color2=\"#FF9900\" />}\n\n                    <div className=\"col-sm\">\n                        <div>\n                            <h2>\n                                Create Task !\n                            </h2>\n\n                            <div style={{margin:\"10% 10%\", backgroundColor:\"#fff\", padding:\"20px\", borderRadius:\"10px\"}}>\n                                <p>Task Name : </p>\n                                <input type=\"text\" className=\"form-control\" value={this.state.copyresp_taskName}\n                                    onChange={(event) => { this.setState({ copyresp_taskName: event.target.value }) }} placeholder=\"Task Name\"></input><br></br>\n\n\n                                <p>From Date: </p>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"From Date\"\n                                    value={this.state.copyresp_fromdate}\n                                    onChange={(event) => { this.setState({ copyresp_fromdate: event.target.value }) }}\n                                ></input><br></br>\n\n                                <p>End Date : </p>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"To Date\"\n                                    value={this.state.copyresp_todate}\n                                    onChange={(event) => { this.setState({ copyresp_todate: event.target.value }) }}\n                                ></input><br></br>\n\n\n                                <p>User Email </p>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Email\"\n                                    value={this.state.copyresp_email}\n                                    onChange={(event) => { this.setState({ copyresp_email: event.target.value }) }}\n                                ></input><br></br>\n\n                                <input type=\"button\" value=\"Create Task\" className=\"bg-dark form-control btn text-white\"\n                                onClick={this.SendData}\n                                >\n                                </input>\n                            \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default CreateTask"]},"metadata":{},"sourceType":"module"}