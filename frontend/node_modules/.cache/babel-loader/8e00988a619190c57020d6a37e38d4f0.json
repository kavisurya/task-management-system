{"ast":null,"code":"var _jsxFileName = \"/home/baby/Desktop/project/movies/frontend/src/adminroutes/alltask.js\";\nimport SlideBar from \"../components/slidebar\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport TableUser from \"../components/tableuser\";\nimport Cookies from 'universal-cookie';\nimport { Link } from \"react-router-dom\";\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport jwt_decode from \"jwt-decode\";\nimport TableUserAdmin from \"../components/tableuseradmin\";\nimport { Button, Modal } from 'react-bootstrap';\nimport \"./alltask.css\";\nimport SlideBarsmall from \"../components/slidebarsmall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Alltask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetAlldata = () => {\n      let config = {\n        headers: {\n          tokenkey: localStorage.getItem(\"token\")\n        }\n      };\n      axios.get(`${this.props.ip}/admin/alltask`, config).then(res => {\n        this.setState({\n          resp: res.data\n        });\n        console.log(res.data);\n\n        if (res.data.error) {\n          this.setState({\n            errormsg: res.data.error\n          });\n        }\n      });\n    };\n\n    this.sendUpdateyes = index => {\n      let config = {\n        headers: {\n          tokenkey: localStorage.getItem(\"token\")\n        }\n      };\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      var copyvals = this.state.resp;\n      var click = copyvals[index];\n      this.setState({\n        copyresp_taskName: click.taskname,\n        copyresp_ID: click._id,\n        copyresp_fromdate: click.fromTask,\n        copyresp_todate: click.toTask,\n        copyresp_email: click.toAssignEMAIL.email,\n        copyresp_completed: click.completed\n      });\n    };\n\n    this.showall = () => this.state.resp.map((val, index) => /*#__PURE__*/_jsxDEV(TableUserAdmin, {\n      sno: index + 1,\n      taskname: val.taskname,\n      fromTask: val.fromTask,\n      toTask: val.toTask,\n      completed: val.completed,\n      assignedTo: val.toAssignEMAIL.username ? val.toAssignEMAIL.username : null,\n      yes: () => {\n        this.sendUpdateyes(index);\n      },\n      assignedBy: val.fromAssign.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this));\n\n    this.Slidebar = () => {\n      this.setState({\n        toggleslide: !this.state.toggleslide\n      });\n    };\n\n    this.SendUpdate = () => {\n      this.setState({\n        toggle: false\n      });\n      let config = {\n        headers: {\n          tokenkey: localStorage.getItem(\"token\")\n        }\n      };\n      axios.post(`${this.props.ip}/admin/edit`, {\n        \"id\": this.state.copyresp_ID,\n        \"taskname\": this.state.copyresp_taskName,\n        \"fromTask\": this.state.copyresp_fromdate,\n        \"toTask\": this.state.copyresp_todate,\n        \"email\": this.state.copyresp_email,\n        \"completed\": this.state.copyresp_completed\n      }, config).then(res => {\n        console.log(res.data);\n\n        if (res.data.error) {\n          ToastsStore.error(res.data.error);\n        } else {\n          ToastsStore.success(res.data.success);\n        }\n      });\n    };\n\n    this.Senddel = () => {};\n\n    this.state = {\n      resp: [],\n      errormsg: \"\",\n      toggle: false,\n      toggleslide: true,\n      copyresp_taskName: \"\",\n      copyresp_ID: \"\",\n      copyresp_fromdate: \"\",\n      copyresp_todate: \"\",\n      copyresp_email: \"\",\n      copyresp_completed: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.GetAlldata();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.toggle ? /*#__PURE__*/_jsxDEV(Modal, {\n        backdrop: \"static\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        show: this.state.toggle,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          className: \"header_\",\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            style: {\n              textAlign: \"center\",\n              fontWeight: \"800\"\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Task Name : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.copyresp_taskName,\n            onChange: event => {\n              this.setState({\n                copyresp_taskName: event.target.value\n              });\n            },\n            placeholder: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 139\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"From Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"From Date\",\n            value: this.state.copyresp_fromdate,\n            onChange: event => {\n              this.setState({\n                copyresp_fromdate: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"End Date : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"To Date\",\n            value: this.state.copyresp_todate,\n            onChange: event => {\n              this.setState({\n                copyresp_todate: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Email\",\n            value: this.state.copyresp_email,\n            onChange: event => {\n              this.setState({\n                copyresp_email: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Completed : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"completed ?\",\n            value: this.state.copyresp_completed,\n            onChange: event => {\n              this.setState({\n                copyresp_completed: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            onClick: this.SendUpdate,\n            value: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-warning\",\n            onClick: this.Senddel,\n            value: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: () => {\n              this.setState({\n                toggle: false\n              });\n            },\n            value: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary slidebutt\",\n          type: \"button\",\n          onClick: this.Slidebar,\n          value: \"slidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.state.toggleslide ? /*#__PURE__*/_jsxDEV(SlideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(SlideBarsmall, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"5% 8%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table bg-white table-responsive\",\n              style: {\n                borderRadius: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-hover\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"thead-light text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"ss\",\n                      children: \"S.NO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Taskname\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Start Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"End Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Assigned By\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Assigned To\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.showall()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Alltask;","map":{"version":3,"sources":["/home/baby/Desktop/project/movies/frontend/src/adminroutes/alltask.js"],"names":["SlideBar","Component","axios","TableUser","Cookies","Link","ToastsContainer","ToastsStore","jwt_decode","TableUserAdmin","Button","Modal","SlideBarsmall","Alltask","constructor","props","GetAlldata","config","headers","tokenkey","localStorage","getItem","get","ip","then","res","setState","resp","data","console","log","error","errormsg","sendUpdateyes","index","toggle","state","copyvals","click","copyresp_taskName","taskname","copyresp_ID","_id","copyresp_fromdate","fromTask","copyresp_todate","toTask","copyresp_email","toAssignEMAIL","email","copyresp_completed","completed","showall","map","val","username","fromAssign","Slidebar","toggleslide","SendUpdate","post","success","Senddel","componentDidMount","render","textAlign","fontWeight","event","target","value","margin","borderRadius"],"mappings":"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","sourcesContent":["\nimport SlideBar from \"../components/slidebar\";\nimport { Component } from \"react\";\nimport axios from \"axios\"\nimport TableUser from \"../components/tableuser\";\nimport Cookies from 'universal-cookie';\nimport { Link } from \"react-router-dom\";\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport jwt_decode from \"jwt-decode\";\nimport TableUserAdmin from \"../components/tableuseradmin\";\nimport { Button, Modal } from 'react-bootstrap';\nimport \"./alltask.css\"\nimport SlideBarsmall from \"../components/slidebarsmall\";\n\nclass Alltask extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            resp: [],\n            errormsg: \"\",\n            toggle: false,\n            toggleslide: true,\n            copyresp_taskName : \"\",\n            copyresp_ID : \"\",\n            copyresp_fromdate : \"\",\n            copyresp_todate : \"\",\n            copyresp_email : \"\",\n            copyresp_completed : \"\",\n        }\n    }\n\n    GetAlldata = () => {\n        let config = {\n            headers: {\n                tokenkey: localStorage.getItem(\"token\")\n            }\n        }\n        axios.get(`${this.props.ip}/admin/alltask`, config).then((res) => {\n            this.setState({ resp: res.data })\n\n            console.log(res.data)\n            if (res.data.error) {\n                this.setState({\n                    errormsg: res.data.error,\n                })\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.GetAlldata()\n    }\n\n    sendUpdateyes = (index) => {\n        let config = {\n            headers: {\n                tokenkey: localStorage.getItem(\"token\")\n            }\n        }\n\n        this.setState({ toggle: !this.state.toggle })\n        var copyvals = this.state.resp\n        var click = copyvals[index]\n        this.setState({\n            copyresp_taskName : click.taskname,\n            copyresp_ID : click._id,\n            copyresp_fromdate : click.fromTask,\n            copyresp_todate : click.toTask,\n            copyresp_email : click.toAssignEMAIL.email,\n            copyresp_completed : click.completed\n        })\n    }\n\n    showall = () => this.state.resp.map((val, index) =>\n\n        <TableUserAdmin\n            sno={index + 1}\n            taskname={val.taskname}\n            fromTask={val.fromTask}\n            toTask={val.toTask}\n            completed={val.completed}\n            assignedTo={val.toAssignEMAIL.username ? val.toAssignEMAIL.username : null}\n            yes={() => { this.sendUpdateyes(index) }}\n            assignedBy={val.fromAssign.username}\n        />\n    )\n\n    Slidebar = () => {\n        this.setState({ toggleslide: !this.state.toggleslide })\n    }\n\n    SendUpdate = ()=>\n    {\n        this.setState({ toggle: false })\n        let config = {\n            headers: {\n                tokenkey: localStorage.getItem(\"token\")\n            }\n        }\n        axios.post(`${this.props.ip}/admin/edit`, (\n            {\n                \"id\" : this.state.copyresp_ID,\n                \"taskname\" : this.state.copyresp_taskName,\n                \"fromTask\" : this.state.copyresp_fromdate, \n                \"toTask\": this.state.copyresp_todate, \n                \"email\": this.state.copyresp_email, \n                \"completed\": this.state.copyresp_completed, \n            }\n        ),config).then((res) => {\n\n            console.log(res.data)\n            if (res.data.error) {\n                ToastsStore.error(res.data.error)\n            }\n            else{\n                \n                ToastsStore.success(res.data.success)\n\n            }\n        })\n        \n    }\n\n    Senddel = ()=>\n    {\n\n    }\n    render() {\n        return (\n            <div >\n                {this.state.toggle ?\n\n\n                    <Modal\n                        backdrop=\"static\"\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                        show={this.state.toggle}>\n                        <Modal.Header className=\"header_\">\n                            <Modal.Title style={{ textAlign: \"center\", fontWeight: \"800\" }}>Edit</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            <p>Task Name : </p>\n                            <input type=\"text\" className=\"form-control\" value={this.state.copyresp_taskName} \n                            onChange={(event)=>{this.setState({copyresp_taskName : event.target.value})}} placeholder=\"Task Name\"></input><br></br>\n                            \n                            \n                            <p>From Date: </p>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"From Date\"\n                             value={this.state.copyresp_fromdate} \n                             onChange={(event)=>{this.setState({copyresp_fromdate : event.target.value})}}\n                            ></input><br></br>\n\n                            <p>End Date : </p>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"To Date\"\n                            value={this.state.copyresp_todate} \n                            onChange={(event)=>{this.setState({copyresp_todate : event.target.value})}}\n                            ></input><br></br>\n\n\n                            <p>Email </p>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Email\"\n                            value={this.state.copyresp_email} \n                            onChange={(event)=>{this.setState({copyresp_email : event.target.value})}}\n                            ></input><br></br>\n\n\n                            <p>Completed : </p>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"completed ?\"\n                            value={this.state.copyresp_completed} \n                            onChange={(event)=>{this.setState({copyresp_completed : event.target.value})}}\n                            ></input><br></br>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <input type=\"button\" className=\"btn btn-success\" onClick={this.SendUpdate} value=\"Update\" />\n                            <input type=\"button\" className=\"btn btn-warning\"  onClick={this.Senddel} value=\"Delete\" />\n\n                            <input type=\"button\" className=\"btn btn-danger\" onClick={() => { this.setState({ toggle: false }) }} value=\"Close\" />\n                        </Modal.Footer>\n                    </Modal> : null}\n\n                <div>\n                    <input className=\"btn btn-primary slidebutt\" type=\"button\" onClick={this.Slidebar} value=\"slidebar\"></input>\n                </div>\n                <div className=\"row\">\n\n                    {this.state.toggleslide ? <SlideBar /> : <SlideBarsmall />}\n\n                    <div className=\"col-sm \">\n                        <div style={{ margin: \"5% 8%\", }}>\n                            <div className=\"table bg-white table-responsive\" style={{ borderRadius: \"10px\" }}>\n                                <table className=\"table table-hover\">\n                                    <thead className=\"thead-light text-center\">\n                                        <tr>\n                                            <th className=\"ss\">S.NO</th>\n                                            <th>Taskname</th>\n                                            <th>Start Date</th>\n                                            <th>End Date</th>\n                                            <th>Completed</th>\n                                            <th>Assigned By</th>\n                                            <th>Assigned To</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n                                        {this.showall()}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Alltask"]},"metadata":{},"sourceType":"module"}