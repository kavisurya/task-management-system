{"ast":null,"code":"var _jsxFileName = \"/home/baby/Desktop/project/movies/frontend/src/adminroutes/alltask.js\";\nimport SlideBar from \"../components/slidebar\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport TableUser from \"../components/tableuser\";\nimport Cookies from 'universal-cookie';\nimport { Link } from \"react-router-dom\";\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Alltask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetAlldata = () => {\n      let config = {\n        headers: {\n          tokenkey: localStorage.getItem(\"token\")\n        }\n      };\n      axios.get(`${this.props.ip}/user`, config).then(res => {\n        this.setState({\n          resp: res.data\n        });\n\n        if (res.data.error) {\n          this.setState({\n            errormsg: res.data.error\n          });\n        }\n      });\n    };\n\n    this.sendUpdateyes = index => {\n      let config = {\n        headers: {\n          tokenkey: localStorage.getItem(\"token\")\n        }\n      };\n      axios.post(`${this.props.ip}/user`, {\n        id: this.state.resp[index]._id,\n        completed: \"yes\"\n      }, config).then(res => {\n        if (res.data.error) {\n          ToastsStore.error(res.data.error);\n        } else {\n          ToastsStore.success(res.data.success);\n          this.GetAlldata();\n        }\n      });\n    };\n\n    this.sendUpdateno = index => {\n      let config = {\n        headers: {\n          tokenkey: localStorage.getItem(\"token\")\n        }\n      };\n      axios.post(`${this.props.ip}/user`, {\n        id: this.state.resp[index]._id,\n        completed: \"no\"\n      }, config).then(res => {\n        if (res.data.error) {\n          ToastsStore.error(res.data.error);\n        } else {\n          ToastsStore.success(res.data.success);\n          this.GetAlldata();\n        }\n      });\n    };\n\n    this.showall = () => this.state.resp.map((val, index) => /*#__PURE__*/_jsxDEV(TableUser, {\n      sno: index + 1,\n      taskname: val.taskname,\n      fromTask: val.fromTask,\n      toTask: val.toTask,\n      completed: val.completed,\n      yes: () => {\n        this.sendUpdateyes(index);\n      },\n      no: () => {\n        this.sendUpdateno(index);\n      },\n      assignedBy: val.fromAssign.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this));\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(SlideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"5% 8%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table bg-white table-responsive-md\",\n              style: {\n                borderRadius: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-hover\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"thead-light text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"S.NO\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Taskname\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Completed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Assigned By\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.showall()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Alltask;","map":{"version":3,"sources":["/home/baby/Desktop/project/movies/frontend/src/adminroutes/alltask.js"],"names":["SlideBar","Component","axios","TableUser","Cookies","Link","ToastsContainer","ToastsStore","jwt_decode","Alltask","constructor","props","GetAlldata","config","headers","tokenkey","localStorage","getItem","get","ip","then","res","setState","resp","data","error","errormsg","sendUpdateyes","index","post","id","state","_id","completed","success","sendUpdateno","showall","map","val","taskname","fromTask","toTask","fromAssign","username","render","margin","borderRadius"],"mappings":";AACA,OAAOA,QAAP,MAAqB,wBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,cAA7C;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAGA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAC5BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,UAPmB,GAON,MAAM;AACf,UAAIC,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADL;AADA,OAAb;AAKAf,MAAAA,KAAK,CAACgB,GAAN,CAAW,GAAE,KAAKP,KAAL,CAAWQ,EAAG,OAA3B,EAAmCN,MAAnC,EAA2CO,IAA3C,CAAiDC,GAAD,IAAS;AACrD,aAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEF,GAAG,CAACG;AAAZ,SAAd;;AAEA,YAAIH,GAAG,CAACG,IAAJ,CAASC,KAAb,EAAoB;AAChB,eAAKH,QAAL,CAAc;AACVI,YAAAA,QAAQ,EAAEL,GAAG,CAACG,IAAJ,CAASC;AADT,WAAd;AAGH;AACJ,OARD;AASH,KAtBkB;;AAAA,SAwBnBE,aAxBmB,GAwBFC,KAAD,IAAW;AACvB,UAAIf,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADL;AADA,OAAb;AAKAf,MAAAA,KAAK,CAAC2B,IAAN,CAAY,GAAE,KAAKlB,KAAL,CAAWQ,EAAG,OAA5B,EAAqC;AACjCW,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWR,IAAX,CAAgBK,KAAhB,EAAuBI,GADM;AAEjCC,QAAAA,SAAS,EAAE;AAFsB,OAArC,EAGIpB,MAHJ,EAGYO,IAHZ,CAGkBC,GAAD,IAAS;AACtB,YAAIA,GAAG,CAACG,IAAJ,CAASC,KAAb,EAAoB;AAChBlB,UAAAA,WAAW,CAACkB,KAAZ,CAAkBJ,GAAG,CAACG,IAAJ,CAASC,KAA3B;AACH,SAFD,MAGK;AACDlB,UAAAA,WAAW,CAAC2B,OAAZ,CAAoBb,GAAG,CAACG,IAAJ,CAASU,OAA7B;AACA,eAAKtB,UAAL;AACH;AAEJ,OAZD;AAaH,KA3CkB;;AAAA,SA6CnBuB,YA7CmB,GA6CHP,KAAD,IAAW;AACtB,UAAIf,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADL;AADA,OAAb;AAKAf,MAAAA,KAAK,CAAC2B,IAAN,CAAY,GAAE,KAAKlB,KAAL,CAAWQ,EAAG,OAA5B,EAAqC;AACjCW,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWR,IAAX,CAAgBK,KAAhB,EAAuBI,GADM;AAEjCC,QAAAA,SAAS,EAAE;AAFsB,OAArC,EAGIpB,MAHJ,EAGYO,IAHZ,CAGkBC,GAAD,IAAS;AACtB,YAAIA,GAAG,CAACG,IAAJ,CAASC,KAAb,EAAoB;AAChBlB,UAAAA,WAAW,CAACkB,KAAZ,CAAkBJ,GAAG,CAACG,IAAJ,CAASC,KAA3B;AACH,SAFD,MAGK;AACDlB,UAAAA,WAAW,CAAC2B,OAAZ,CAAoBb,GAAG,CAACG,IAAJ,CAASU,OAA7B;AACA,eAAKtB,UAAL;AACH;AAEJ,OAZD;AAaH,KAhEkB;;AAAA,SAmEnBwB,OAnEmB,GAmET,MAAM,KAAKL,KAAL,CAAWR,IAAX,CAAgBc,GAAhB,CAAoB,CAACC,GAAD,EAAMV,KAAN,kBAEhC,QAAC,SAAD;AACI,MAAA,GAAG,EAAEA,KAAK,GAAG,CADjB;AAEI,MAAA,QAAQ,EAAEU,GAAG,CAACC,QAFlB;AAGI,MAAA,QAAQ,EAAED,GAAG,CAACE,QAHlB;AAII,MAAA,MAAM,EAAEF,GAAG,CAACG,MAJhB;AAKI,MAAA,SAAS,EAAEH,GAAG,CAACL,SALnB;AAMI,MAAA,GAAG,EAAE,MAAM;AAAE,aAAKN,aAAL,CAAmBC,KAAnB;AAA2B,OAN5C;AAOI,MAAA,EAAE,EAAE,MAAM;AAAE,aAAKO,YAAL,CAAkBP,KAAlB;AAA0B,OAP1C;AAQI,MAAA,UAAU,EAAEU,GAAG,CAACI,UAAJ,CAAeC;AAR/B;AAAA;AAAA;AAAA;AAAA,YAFY,CAnEG;;AAEf,SAAKZ,KAAL,GAAa,EAAb;AAGH;;AA4EDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAZ;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,oCAAf;AAAoD,cAAA,KAAK,EAAE;AAAEC,gBAAAA,YAAY,EAAE;AAAhB,eAA3D;AAAA,qCACI;AAAO,gBAAA,SAAS,EAAC,mBAAjB;AAAA,wCACI;AAAO,kBAAA,SAAS,EAAC,yBAAjB;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAWI;AAAA,4BACK,KAAKV,OAAL;AADL;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AAjH2B;;AAoHhC,eAAe3B,OAAf","sourcesContent":["\nimport SlideBar from \"../components/slidebar\";\nimport { Component } from \"react\";\nimport axios from \"axios\"\nimport TableUser from \"../components/tableuser\";\nimport Cookies from 'universal-cookie';\nimport { Link } from \"react-router-dom\";\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport jwt_decode from \"jwt-decode\";\n\n\nclass Alltask extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    GetAlldata = () => {\n        let config = {\n            headers: {\n                tokenkey: localStorage.getItem(\"token\")\n            }\n        }\n        axios.get(`${this.props.ip}/user`, config).then((res) => {\n            this.setState({ resp: res.data })\n\n            if (res.data.error) {\n                this.setState({\n                    errormsg: res.data.error,\n                })\n            }\n        })\n    }\n\n    sendUpdateyes = (index) => {\n        let config = {\n            headers: {\n                tokenkey: localStorage.getItem(\"token\")\n            }\n        }\n        axios.post(`${this.props.ip}/user`, ({\n            id: this.state.resp[index]._id,\n            completed: \"yes\"\n        }), config).then((res) => {\n            if (res.data.error) {\n                ToastsStore.error(res.data.error)\n            }\n            else {\n                ToastsStore.success(res.data.success)\n                this.GetAlldata()\n            }\n\n        })\n    }\n\n    sendUpdateno = (index) => {\n        let config = {\n            headers: {\n                tokenkey: localStorage.getItem(\"token\")\n            }\n        }\n        axios.post(`${this.props.ip}/user`, ({\n            id: this.state.resp[index]._id,\n            completed: \"no\"\n        }), config).then((res) => {\n            if (res.data.error) {\n                ToastsStore.error(res.data.error)\n            }\n            else {\n                ToastsStore.success(res.data.success)\n                this.GetAlldata()\n            }\n\n        })\n    }\n\n\n    showall = () => this.state.resp.map((val, index) =>\n\n        <TableUser\n            sno={index + 1}\n            taskname={val.taskname}\n            fromTask={val.fromTask}\n            toTask={val.toTask}\n            completed={val.completed}\n            yes={() => { this.sendUpdateyes(index) }}\n            no={() => { this.sendUpdateno(index) }}\n            assignedBy={val.fromAssign.username}\n        />\n    )\n\n    render() {\n        return (\n            <div >\n                <div className=\"row\">\n\n                    <SlideBar />\n\n                    <div className=\"col-sm \">\n                        <div style={{ margin: \"5% 8%\", }}>\n                            <div className=\"table bg-white table-responsive-md\" style={{ borderRadius: \"10px\" }}>\n                                <table className=\"table table-hover\">\n                                    <thead className=\"thead-light text-center\">\n                                        <th>S.NO</th>\n                                        <th>Taskname</th>\n                                        <th>Start Date</th>\n                                        <th>End Date</th>\n                                        <th>Completed</th>\n                                        <th>Assigned By</th>\n                                        <th>Submit</th>\n                                    </thead>\n\n                                    <tbody>\n                                        {this.showall()}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Alltask"]},"metadata":{},"sourceType":"module"}